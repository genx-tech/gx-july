{"version":3,"names":["_get","collection","keyPath","defaultValue","undefined","nodes","Array","isArray","split","index","length"],"sources":["get.js"],"sourcesContent":["/**\n * Get a value by dot-separated path or key array from a collection\n * Does not support '[i]', e.g. 'a[0].b.c' style accessor, use [ 'a',  0, 'b', 'c' ] instead, different from lodash/get\n * @alias object.get\n * @param {Object} collection - The collection\n * @param {string|array} keyPath - A dot-separated path (dsp) or a key array, e.g. settings.xxx.yyy, or ['setting', 'xxx', 'yyy']\n * @param {Object} [defaultValue] - The default value if the path does not exist\n * @returns {*}\n */\nconst _get = (collection, keyPath, defaultValue) => {\n    if (keyPath == null) {\n        return collection ?? undefined;\n    }\n    let nodes = Array.isArray(keyPath) ? keyPath : typeof keyPath === 'string' ? keyPath.split('.') : [keyPath];\n\n    if (collection == null) {\n        return defaultValue ?? collection;\n    }\n\n    let index = 0;\n    const length = nodes.length;\n\n    while (collection != null && index < length) {\n        collection = collection[nodes[index++]];\n    }\n\n    return typeof collection !== 'undefined' && index && index === length ? collection : defaultValue;\n};\n\nexport default _get;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,IAAI,GAAGA,CAACC,UAAU,EAAEC,OAAO,EAAEC,YAAY,KAAK;EAChD,IAAID,OAAO,IAAI,IAAI,EAAE;IACjB,OAAOD,UAAU,IAAIG,SAAS;EAClC;EACA,IAAIC,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACL,OAAO,CAAC,GAAGA,OAAO,GAAG,OAAOA,OAAO,KAAK,QAAQ,GAAGA,OAAO,CAACM,KAAK,CAAC,GAAG,CAAC,GAAG,CAACN,OAAO,CAAC;EAE3G,IAAID,UAAU,IAAI,IAAI,EAAE;IACpB,OAAOE,YAAY,IAAIF,UAAU;EACrC;EAEA,IAAIQ,KAAK,GAAG,CAAC;EACb,MAAMC,MAAM,GAAGL,KAAK,CAACK,MAAM;EAE3B,OAAOT,UAAU,IAAI,IAAI,IAAIQ,KAAK,GAAGC,MAAM,EAAE;IACzCT,UAAU,GAAGA,UAAU,CAACI,KAAK,CAACI,KAAK,EAAE,CAAC,CAAC;EAC3C;EAEA,OAAO,OAAOR,UAAU,KAAK,WAAW,IAAIQ,KAAK,IAAIA,KAAK,KAAKC,MAAM,GAAGT,UAAU,GAAGE,YAAY;AACrG,CAAC;AAED,eAAeH,IAAI"}