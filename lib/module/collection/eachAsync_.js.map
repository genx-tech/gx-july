{"version":3,"names":["isPlainObject","eachAsync_","obj","iterator","Array","isArray","r","l","length","i","push","k","Object","prototype","hasOwnProperty","call","Promise","reject"],"sources":["eachAsync_.js"],"sourcesContent":["import isPlainObject from '../object/isPlainObject';\n\n/**\n * Iterate an array of an object asynchronously\n * @alias collection.eachAsync_\n * @async\n * @param {Array|Object} obj\n * @param {asyncIterator} iterator\n * @returns {Promise.<Array|Object>}\n */\nasync function eachAsync_(obj, iterator) {\n    if (Array.isArray(obj)) {\n        let r = [];\n\n        let l = obj.length;\n        for (let i = 0; i < l; i++) {\n            r.push(await iterator(obj[i], i, obj));\n        }\n\n        return r;\n    } \n    \n    if (isPlainObject(obj)) {\n        let r = {};\n\n        for (let k in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, k)) {\n                r[k] = await iterator(obj[k], k, obj);\n            }\n        }\n\n        return r;\n    }  \n\n    return Promise.reject('Invalid argument!');\n}\n\nexport default eachAsync_;\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,yBAAyB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,UAAUA,CAACC,GAAG,EAAEC,QAAQ,EAAE;EACrC,IAAIC,KAAK,CAACC,OAAO,CAACH,GAAG,CAAC,EAAE;IACpB,IAAII,CAAC,GAAG,EAAE;IAEV,IAAIC,CAAC,GAAGL,GAAG,CAACM,MAAM;IAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,CAAC,EAAEE,CAAC,EAAE,EAAE;MACxBH,CAAC,CAACI,IAAI,CAAC,MAAMP,QAAQ,CAACD,GAAG,CAACO,CAAC,CAAC,EAAEA,CAAC,EAAEP,GAAG,CAAC,CAAC;IAC1C;IAEA,OAAOI,CAAC;EACZ;EAEA,IAAIN,aAAa,CAACE,GAAG,CAAC,EAAE;IACpB,IAAII,CAAC,GAAG,CAAC,CAAC;IAEV,KAAK,IAAIK,CAAC,IAAIT,GAAG,EAAE;MACf,IAAIU,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACb,GAAG,EAAES,CAAC,CAAC,EAAE;QAC9CL,CAAC,CAACK,CAAC,CAAC,GAAG,MAAMR,QAAQ,CAACD,GAAG,CAACS,CAAC,CAAC,EAAEA,CAAC,EAAET,GAAG,CAAC;MACzC;IACJ;IAEA,OAAOI,CAAC;EACZ;EAEA,OAAOU,OAAO,CAACC,MAAM,CAAC,mBAAmB,CAAC;AAC9C;AAEA,eAAehB,UAAU"}