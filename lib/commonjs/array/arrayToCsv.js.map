{"version":3,"sources":["arrayToCsv.js"],"names":["arrayToCsv","data","separator","Array","isArray","Error","map","elem","toString","indexOf","join"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,UAAU,GAAG,CAACC,IAAD,EAAOC,SAAS,GAAG,GAAnB,KAA2B;AAC1C,MAAID,IAAI,IAAI,IAAZ,EAAkB;AACd,WAAO,EAAP;AACH;;AAED,MAAI,CAACE,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAL,EAA0B;AACtB,UAAM,IAAII,KAAJ,CAAU,yCAAV,CAAN;AACH;;AAED,SAAOJ,IAAI,CACNK,GADE,CACGC,IAAD,IAAU;AACXA,IAAAA,IAAI,GAAGA,IAAI,CAACC,QAAL,EAAP;AACA,WAAOD,IAAI,CAACE,OAAL,CAAaP,SAAb,MAA4B,CAAC,CAA7B,GAAiC,oBAAMK,IAAN,EAAY,GAAZ,CAAjC,GAAoDA,IAA3D;AACH,GAJE,EAKFG,IALE,CAKGR,SALH,CAAP;AAMH,CAfD;;eAiBeF,U","sourcesContent":["import quote from '../string/quote';\n\nconst arrayToCsv = (data, separator = ',') => {\n    if (data == null) {\n        return '';\n    }\n\n    if (!Array.isArray(data)) {\n        throw new Error('The target argument should be an array.');\n    }\n\n    return data\n        .map((elem) => {\n            elem = elem.toString();\n            return elem.indexOf(separator) !== -1 ? quote(elem, '\"') : elem;\n        })\n        .join(separator);\n};\n\nexport default arrayToCsv;\n"]}