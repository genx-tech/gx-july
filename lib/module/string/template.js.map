{"version":3,"sources":["template.js"],"names":["templateSettings","escape","evaluate","imports","interpolate","variable","compile","str","template","values"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,gBAAgB,GAAG;AACrBC,EAAAA,MAAM,EAAE,KADa;AAErBC,EAAAA,QAAQ,EAAE,KAFW;AAGrBC,EAAAA,OAAO,EAAE,KAHY;AAIrBC,EAAAA,WAAW,EAAE,iBAJQ;AAKrBC,EAAAA,QAAQ,EAAE;AALW,CAAzB;;AAQA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAO,wBAAUA,GAAV,EAAeP,gBAAf,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASQ,QAAT,CAAkBD,GAAlB,EAAuBE,MAAvB,EAA+B;AAC3B,SAAOH,OAAO,CAACC,GAAD,CAAP,CAAaE,MAAb,CAAP;AACH;;AAEDD,QAAQ,CAACF,OAAT,GAAmBA,OAAnB;eACeE,Q","sourcesContent":["import _template from 'lodash/template';\n\nconst templateSettings = {\n    escape: false,\n    evaluate: false,\n    imports: false,\n    interpolate: /{{([\\s\\S]+?)}}/g,\n    variable: false\n};\n\nfunction compile(str) {\n    return _template(str, templateSettings);\n}\n\n/**\n * Interpolate values \n * @alias string.template\n * @param {string} str\n * @param {object} values\n * @returns {string}\n */\nfunction template(str, values) {\n    return compile(str)(values);\n}\n\ntemplate.compile = compile;\nexport default template;"]}