{"version":3,"names":["zipAndFlat","arr1","arr2","long","result","ll","ls","l1","length","l2","i","push"],"sources":["zipAndFlat.js"],"sourcesContent":["/**\n * One-by-one merge two arrays into one\n * 10x faster than lodash flatten and zip\n * @alias array.zipAndFlat\n * @param {Array} arr1\n * @param {Array} arr2\n * @returns {Array}\n */\nfunction zipAndFlat(arr1, arr2) {\n    let long,\n        result = [],\n        ll,\n        ls;\n    const l1 = arr1 == null ? 0 : arr1.length;\n    const l2 = arr2 == null ? 0 : arr2.length;\n\n    if (l2 > l1) {\n        ll = l2;\n        ls = l1;\n        long = arr2;\n    } else {\n        ll = l1;\n        ls = l2;\n        long = arr1;\n    }\n\n    for (let i = 0; i < ls; i++) {\n        result.push(arr1[i]);\n        result.push(arr2[i]);\n    }\n\n    for (let i = ls; i < ll; i++) {\n        result.push(long[i]);\n    }\n\n    return result;\n}\n\nexport default zipAndFlat;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAUA,CAACC,IAAI,EAAEC,IAAI,EAAE;EAC5B,IAAIC,IAAI;IACJC,MAAM,GAAG,EAAE;IACXC,EAAE;IACFC,EAAE;EACN,MAAMC,EAAE,GAAGN,IAAI,IAAI,IAAI,GAAG,CAAC,GAAGA,IAAI,CAACO,MAAM;EACzC,MAAMC,EAAE,GAAGP,IAAI,IAAI,IAAI,GAAG,CAAC,GAAGA,IAAI,CAACM,MAAM;EAEzC,IAAIC,EAAE,GAAGF,EAAE,EAAE;IACTF,EAAE,GAAGI,EAAE;IACPH,EAAE,GAAGC,EAAE;IACPJ,IAAI,GAAGD,IAAI;EACf,CAAC,MAAM;IACHG,EAAE,GAAGE,EAAE;IACPD,EAAE,GAAGG,EAAE;IACPN,IAAI,GAAGF,IAAI;EACf;EAEA,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,EAAE,EAAEI,CAAC,EAAE,EAAE;IACzBN,MAAM,CAACO,IAAI,CAACV,IAAI,CAACS,CAAC,CAAC,CAAC;IACpBN,MAAM,CAACO,IAAI,CAACT,IAAI,CAACQ,CAAC,CAAC,CAAC;EACxB;EAEA,KAAK,IAAIA,CAAC,GAAGJ,EAAE,EAAEI,CAAC,GAAGL,EAAE,EAAEK,CAAC,EAAE,EAAE;IAC1BN,MAAM,CAACO,IAAI,CAACR,IAAI,CAACO,CAAC,CAAC,CAAC;EACxB;EAEA,OAAON,MAAM;AACjB;AAEA,eAAeJ,UAAU"}