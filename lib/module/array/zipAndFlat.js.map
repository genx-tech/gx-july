{"version":3,"sources":["zipAndFlat.js"],"names":["zipAndFlat","arr1","arr2","long","result","ll","ls","l1","length","l2","i","push"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgC;AAC5B,MAAIC,IAAJ;AAAA,MACIC,MAAM,GAAG,EADb;AAAA,MAEIC,EAFJ;AAAA,MAGIC,EAHJ;AAIA,QAAMC,EAAE,GAAGN,IAAI,IAAI,IAAR,GAAe,CAAf,GAAmBA,IAAI,CAACO,MAAnC;AACA,QAAMC,EAAE,GAAGP,IAAI,IAAI,IAAR,GAAe,CAAf,GAAmBA,IAAI,CAACM,MAAnC;;AAEA,MAAIC,EAAE,GAAGF,EAAT,EAAa;AACTF,IAAAA,EAAE,GAAGI,EAAL;AACAH,IAAAA,EAAE,GAAGC,EAAL;AACAJ,IAAAA,IAAI,GAAGD,IAAP;AACH,GAJD,MAIO;AACHG,IAAAA,EAAE,GAAGE,EAAL;AACAD,IAAAA,EAAE,GAAGG,EAAL;AACAN,IAAAA,IAAI,GAAGF,IAAP;AACH;;AAED,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,EAApB,EAAwBI,CAAC,EAAzB,EAA6B;AACzBN,IAAAA,MAAM,CAACO,IAAP,CAAYV,IAAI,CAACS,CAAD,CAAhB;AACAN,IAAAA,MAAM,CAACO,IAAP,CAAYT,IAAI,CAACQ,CAAD,CAAhB;AACH;;AAED,OAAK,IAAIA,CAAC,GAAGJ,EAAb,EAAiBI,CAAC,GAAGL,EAArB,EAAyBK,CAAC,EAA1B,EAA8B;AAC1BN,IAAAA,MAAM,CAACO,IAAP,CAAYR,IAAI,CAACO,CAAD,CAAhB;AACH;;AAED,SAAON,MAAP;AACH;;eAEcJ,U","sourcesContent":["/**\n * One-by-one merge two arrays into one\n * @alias array.zipAndFlat\n * @param {Array} arr1\n * @param {Array} arr2\n * @returns {Array}\n */\nfunction zipAndFlat(arr1, arr2) {\n    let long,\n        result = [],\n        ll,\n        ls;\n    const l1 = arr1 == null ? 0 : arr1.length;\n    const l2 = arr2 == null ? 0 : arr2.length;\n\n    if (l2 > l1) {\n        ll = l2;\n        ls = l1;\n        long = arr2;\n    } else {\n        ll = l1;\n        ls = l2;\n        long = arr1;\n    }\n\n    for (let i = 0; i < ls; i++) {\n        result.push(arr1[i]);\n        result.push(arr2[i]);\n    }\n\n    for (let i = ls; i < ll; i++) {\n        result.push(long[i]);\n    }\n\n    return result;\n}\n\nexport default zipAndFlat;"]}