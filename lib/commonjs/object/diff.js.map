{"version":3,"names":["_isEqual2","_interopRequireDefault","require","_reduce2","_isEmpty2","_differenceWith2","_ifThen","obj","__esModule","default","arrayOperators","array","k","v","push","objectOperators","_diff","base","object","creator","setter","_reduce","re","vb","tb","to","Array","isArray","avd","_differenceWith","_isEqual","length","baseIsEmpty","_isEmpty","vd","difference","ops","undefined","ifThen","_default","exports","module"],"sources":["diff.js"],"sourcesContent":["import _isEqual from 'lodash/isEqual';\nimport _reduce from 'lodash/reduce';\nimport _isEmpty from 'lodash/isEmpty';\nimport _differenceWith from 'lodash/differenceWith';\n\nimport ifThen from '../lang/ifThen';\n\nconst arrayOperators = [() => [], (array, k, v) => array.push(v)];\nconst objectOperators = [() => ({}), (obj, k, v) => (obj[k] = v)];\n\nfunction _diff(base, object, creator, setter) {\n    return _reduce(\n        object,\n        (re, v, k) => {\n            const vb = base[k];\n            const tb = typeof vb;\n            const to = typeof v;\n\n            if (tb !== to) {\n                // different type at all\n                setter(re, k, v);\n            } else if (typeof vb === 'object') {\n                // both are object\n                if (Array.isArray(vb)) {\n                    // both are array\n                    const avd = _differenceWith(v, vb, _isEqual);\n                    if (avd.length > 0) {\n                        setter(re, k, avd);\n                    }\n                } else if (!_isEqual(vb, v)) {\n                    // object\n                    const baseIsEmpty = _isEmpty(vb);\n\n                    if (_isEmpty(v)) {\n                        if (!baseIsEmpty) {\n                            setter(re, k, v);\n                        }\n                    } else {\n                        if (baseIsEmpty) {\n                            setter(re, k, v);\n                        } else {\n                            // both not empty\n                            const vd = _diff(vb, v, objectOperators[0], objectOperators[1]);\n                            if (!_isEmpty(vd)) {\n                                setter(re, k, vd);\n                            }\n                        }\n                    }\n                }\n            } else if (vb !== v) {\n                setter(re, k, v);\n            }\n\n            return re;\n        },\n        creator()\n    );\n}\n\n/**\n * Deep diff between two object\n * @alias object.difference\n * @param  {Object} base - Object to be compared\n * @param  {Object} object - Object compared\n * @return {Object} Return the key-value pair from object which of the value is different from base with the same key, or undefined if no difference\n */\nfunction difference(base, object) {\n    const ops = Array.isArray(base) ? arrayOperators : objectOperators;\n    const baseIsEmpty = _isEmpty(base);\n    return _isEmpty(object)\n        ? baseIsEmpty\n            ? undefined\n            : object\n        : baseIsEmpty\n        ? object\n        : ifThen(_diff(base, object, ops[0], ops[1]), _isEmpty, undefined);\n}\n\nexport default difference;\n"],"mappings":"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"}