{"version":3,"sources":["unflattenObject.js"],"names":["unflattenObject","object","keyPathSep","Error","options","numberAsArrayIndex","keyPathSeparator","result","v","k"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,eAAe,GAAG,CAACC,MAAD,EAASC,UAAU,GAAG,GAAtB,KAA8B;AAClD,MAAI,CAAC,4BAAcD,MAAd,CAAL,EAA4B;AACxB,UAAM,IAAIE,KAAJ,CAAU,gCAAV,CAAN;AACH;;AAED,QAAMC,OAAO,GAAG;AAAEC,IAAAA,kBAAkB,EAAE,IAAtB;AAA4BC,IAAAA,gBAAgB,EAAEJ;AAA9C,GAAhB;AAEA,QAAMK,MAAM,GAAG,EAAf;AAEA,sBAAMN,MAAN,EAAc,CAACO,CAAD,EAAIC,CAAJ,KAAU;AACpB,sBAAIF,MAAJ,EAAYE,CAAZ,EAAeD,CAAf,EAAkBJ,OAAlB;AACH,GAFD;AAIA,SAAOG,MAAP;AACH,CAdD;;eAgBeP,e","sourcesContent":["import _each from 'lodash/each';\nimport isPlainObject from './isPlainObject';\nimport set from './set';\n\nconst unflattenObject = (object, keyPathSep = '.') => {\n    if (!isPlainObject(object)) {\n        throw new Error('The argument is not an object.');\n    }\n\n    const options = { numberAsArrayIndex: true, keyPathSeparator: keyPathSep };\n\n    const result = {};\n\n    _each(object, (v, k) => {\n        set(result, k, v, options);\n    });\n\n    return result;\n};\n\nexport default unflattenObject;\n"]}