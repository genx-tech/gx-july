{"version":3,"sources":["remap.js"],"names":["remap","object","mapping","keepUnmapped","newObj","v","k","hasOwnProperty","nk","Array","isArray"],"mappings":";;;;;;;AAAA;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,KAAT,CAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,YAAhC,EAA8C;AAC1C,MAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC,2BAAUA,OAAV,EAAoBD,MAApB;AAEjC,MAAIG,MAAM,GAAG,EAAb;AACA,sBAAMH,MAAN,EAAc,UAACI,CAAD,EAAIC,CAAJ,EAAU;AACpB;AACA,QAAIJ,OAAO,CAACK,cAAR,CAAuBD,CAAvB,CAAJ,EAA+B;AAC3B;AACA,UAAIE,EAAE,GAAGN,OAAO,CAACI,CAAD,CAAhB;;AACA,UAAIG,KAAK,CAACC,OAAN,CAAcF,EAAd,CAAJ,EAAuB;AACnBJ,QAAAA,MAAM,CAACI,EAAE,CAAC,CAAD,CAAH,CAAN,mCACOJ,MAAM,CAACI,EAAE,CAAC,CAAD,CAAH,CADb,GAEOR,KAAK,CAACK,CAAD,EAAIG,EAAE,CAAC,CAAD,CAAN,EAAWL,YAAX,CAFZ;AAIH,OALD,MAKO;AACHC,QAAAA,MAAM,CAACI,EAAD,CAAN,GAAaH,CAAb;AACH;AACJ,KAXD,MAWO;AACH,UAAIF,YAAJ,EAAkB;AACdC,QAAAA,MAAM,CAACE,CAAD,CAAN,GAAYD,CAAZ;AACH;AACJ;AACJ,GAlBD;AAoBA,SAAOD,MAAP;AACH;;eAEcJ,K","sourcesContent":["import _each from 'lodash/each';\n\n/**\n * Remap the keys of object elements in an array, like projection.\n * @alias object.remap\n * @param {*} object\n * @param {Object} mapping - key to newKey or key to array[ newKey, valueMap ] for next level mapping\n * @param {boolean} keepUnmapped - If true, will keep those not in mapping as its original key, otherwise filter out\n * @returns {Object} Remapped object\n */\nfunction remap(object, mapping, keepUnmapped) {\n    if (typeof mapping === 'string') return { [mapping]: object };\n\n    let newObj = {};\n    _each(object, (v, k) => {\n        /* eslint-disable no-prototype-builtins */\n        if (mapping.hasOwnProperty(k)) {\n            /* eslint-enable no-prototype-builtins */\n            let nk = mapping[k];\n            if (Array.isArray(nk)) {\n                newObj[nk[0]] = {\n                    ...newObj[nk[0]],\n                    ...remap(v, nk[1], keepUnmapped),\n                };\n            } else {\n                newObj[nk] = v;\n            }\n        } else {\n            if (keepUnmapped) {\n                newObj[k] = v;\n            }\n        }\n    });\n\n    return newObj;\n}\n\nexport default remap;\n"]}