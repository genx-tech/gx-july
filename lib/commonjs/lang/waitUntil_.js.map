{"version":3,"names":["_sleep_","_interopRequireDefault","require","obj","__esModule","default","waitUntil_","checker","checkInterval","maxRounds","result","counter","sleep_","_default","exports","module"],"sources":["waitUntil_.js"],"sourcesContent":["import sleep_ from './sleep_';\n\n/**\n * Run the checker every given duration for certain rounds until the checker returns non-false value.\n * @alias lang.waitUntil_\n * @async\n * @param {Function} checker - predicator\n * @param {integer} [checkInterval=1000]\n * @param {integer} [maxRounds=10]\n * @returns {Promise.<boolean>}\n */\nasync function waitUntil_(checker, checkInterval = 1000, maxRounds = 10) {\n    let result = await checker();\n    if (result) return result;\n\n    let counter = 0;\n    do {\n        await sleep_(checkInterval);\n\n        result = await checker();\n\n        if (result) {\n            break;\n        }\n    } while (++counter < maxRounds);\n\n    return result;\n}\n\nexport default waitUntil_;\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA8B,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAW9B,eAAeG,UAAUA,CAACC,OAAO,EAAEC,aAAa,GAAG,IAAI,EAAEC,SAAS,GAAG,EAAE,EAAE;EACrE,IAAIC,MAAM,GAAG,MAAMH,OAAO,CAAC,CAAC;EAC5B,IAAIG,MAAM,EAAE,OAAOA,MAAM;EAEzB,IAAIC,OAAO,GAAG,CAAC;EACf,GAAG;IACC,MAAM,IAAAC,eAAM,EAACJ,aAAa,CAAC;IAE3BE,MAAM,GAAG,MAAMH,OAAO,CAAC,CAAC;IAExB,IAAIG,MAAM,EAAE;MACR;IACJ;EACJ,CAAC,QAAQ,EAAEC,OAAO,GAAGF,SAAS;EAE9B,OAAOC,MAAM;AACjB;AAAC,IAAAG,QAAA,GAEcP,UAAU;AAAAQ,OAAA,CAAAT,OAAA,GAAAQ,QAAA;AAAAE,MAAA,CAAAD,OAAA,GAAAA,OAAA,CAAAT,OAAA"}