{"version":3,"sources":["urlObjectToQueryString.js"],"names":["objectToQueryString","obj","excludeNullValue","parts","k","v","part","encodeURIComponent","push","join"],"mappings":";;;;;;;AAMA,SAASA,mBAAT,CAA6BC,GAA7B,EAAkCC,gBAAlC,EAAoD;AAChD,MAAIC,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,CAAT,IAAcH,GAAd,EAAmB;AACf,UAAMI,CAAC,GAAGJ,GAAG,CAACG,CAAD,CAAb;AACA,QAAIE,IAAJ;;AAEA,QAAID,CAAC,IAAI,IAAT,EAAe;AACXC,MAAAA,IAAI,GAAGC,kBAAkB,CAACH,CAAD,CAAlB,GAAwB,GAAxB,GAA8BG,kBAAkB,CAACF,CAAD,CAAvD;AACH,KAFD,MAEO,IAAIH,gBAAJ,EAAsB;AACzB;AACH,KAFM,MAEA;AACHI,MAAAA,IAAI,GAAGC,kBAAkB,CAACH,CAAD,CAAzB;AACH;;AAEDD,IAAAA,KAAK,CAACK,IAAN,CAAWF,IAAX;AACH;;AAED,SAAOH,KAAK,CAACM,IAAN,CAAW,GAAX,CAAP;AACH;;eAEcT,mB","sourcesContent":["/**\n * Stringify an object into url query string.\n * @function string.urlObjectToQueryString\n * @param {Object} obj\n * @returns {String}\n */\nfunction objectToQueryString(obj, excludeNullValue) {\n    let parts = [];\n\n    for (let k in obj) {\n        const v = obj[k];       \n        let part;\n\n        if (v != null) {\n            part = encodeURIComponent(k) + '=' + encodeURIComponent(v);\n        } else if (excludeNullValue) {\n            continue;\n        } else {\n            part = encodeURIComponent(k);\n        }\n        \n        parts.push(part);    \n    }\n\n    return parts.join('&');\n}\n\nexport default objectToQueryString;\n"]}