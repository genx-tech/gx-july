{"version":3,"names":["findKeyAsync_","findAsync_","obj","asyncPredicate_","k"],"sources":["findAsync_.js"],"sourcesContent":["import findKeyAsync_ from './findKeyAsync_';\n\n/**\n * Iterate a collection asynchronously until predicate returns true\n * The returned value is undefined if not found.\n * That's different from the _.find() function in lodash.\n * @alias collection.findAsync_\n * @async\n * @param {Array|Object} obj\n * @param {asyncIterator} asyncPredicate_\n * @returns {Promise.<Object|undefined>}\n */\nasync function findAsync_(obj, asyncPredicate_) {\n    const k = await findKeyAsync_(obj, asyncPredicate_);\n    return obj[k];\n}\n\nexport default findAsync_;\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,iBAAiB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,UAAUA,CAACC,GAAG,EAAEC,eAAe,EAAE;EAC5C,MAAMC,CAAC,GAAG,MAAMJ,aAAa,CAACE,GAAG,EAAEC,eAAe,CAAC;EACnD,OAAOD,GAAG,CAACE,CAAC,CAAC;AACjB;AAEA,eAAeH,UAAU"}