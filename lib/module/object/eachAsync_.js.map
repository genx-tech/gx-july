{"version":3,"sources":["eachAsync_.js"],"names":["eachAsync_","obj","iterator","Array","isArray","r","l","length","i","push","k","Object","prototype","hasOwnProperty","call","Promise","reject"],"mappings":";;;;;;;AAAA;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;SACeA,U;;;;;wEAAf,iBAA0BC,GAA1B,EAA+BC,QAA/B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBACQC,KAAK,CAACC,OAAN,CAAcH,GAAd,CADR;AAAA;AAAA;AAAA;;AAEYI,YAAAA,CAFZ,GAEgB,EAFhB;AAIYC,YAAAA,CAJZ,GAIgBL,GAAG,CAACM,MAJpB;AAKiBC,YAAAA,CALjB,GAKqB,CALrB;;AAAA;AAAA,kBAKwBA,CAAC,GAAGF,CAL5B;AAAA;AAAA;AAAA;;AAAA,0BAMYD,CANZ;AAAA;AAAA,mBAMyBH,QAAQ,CAACD,GAAG,CAACO,CAAD,CAAJ,EAASA,CAAT,EAAYP,GAAZ,CANjC;;AAAA;AAAA;;AAAA,wBAMcQ,IANd;;AAAA;AAK+BD,YAAAA,CAAC,EALhC;AAAA;AAAA;;AAAA;AAAA,6CASeH,CATf;;AAAA;AAAA,iBAUe,4BAAcJ,GAAd,CAVf;AAAA;AAAA;AAAA;;AAWYI,YAAAA,EAXZ,GAWgB,EAXhB;AAAA,kDAasBJ,GAbtB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaiBS,YAAAA,CAbjB;;AAAA,iBAcgBC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCb,GAArC,EAA0CS,CAA1C,CAdhB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAe6BR,QAAQ,CAACD,GAAG,CAACS,CAAD,CAAJ,EAASA,CAAT,EAAYT,GAAZ,CAfrC;;AAAA;AAegBI,YAAAA,EAAC,CAACK,CAAD,CAfjB;;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAmBeL,EAnBf;;AAAA;AAAA,6CAqBeU,OAAO,CAACC,MAAR,CAAe,mBAAf,CArBf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;eAyBehB,U","sourcesContent":["import isPlainObject from './isPlainObject';\n\n/**\n * Iterate an array of an object asynchronously\n * @param {Array|Object} obj\n * @param {asyncIterator} iterator\n * @returns {Promise.<Array|Object>}\n */\nasync function eachAsync_(obj, iterator) {\n    if (Array.isArray(obj)) {\n        let r = [];\n\n        let l = obj.length;\n        for (let i = 0; i < l; i++) {\n            r.push(await iterator(obj[i], i, obj));\n        }\n\n        return r;\n    } else if (isPlainObject(obj)) {\n        let r = {};\n\n        for (let k in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, k)) {\n                r[k] = await iterator(obj[k], k, obj);\n            }\n        }\n\n        return r;\n    } else {\n        return Promise.reject('Invalid argument!');\n    }\n}\n\nexport default eachAsync_;\n"]}