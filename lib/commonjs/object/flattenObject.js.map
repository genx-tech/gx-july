{"version":3,"sources":["flattenObject.js"],"names":["flattenObject","object","keyPathSep","result","v","k","toString","v2","k2"],"mappings":";;;;;;;AAAA;;;;AAQA,MAAMA,aAAa,GAAG,CAACC,MAAD,EAASC,UAAU,GAAG,GAAtB,KAA8B;AAChD,QAAMC,MAAM,GAAG,EAAf;AAEA,sBAAMF,MAAN,EAAc,CAACG,CAAD,EAAIC,CAAJ,KAAU;AACpBA,IAAAA,CAAC,GAAGA,CAAC,CAACC,QAAF,EAAJ;;AAEA,QAAIF,CAAC,IAAI,IAAL,IAAa,OAAOA,CAAP,KAAa,QAA9B,EAAwC;AACpCA,MAAAA,CAAC,GAAGJ,aAAa,CAACI,CAAD,EAAIF,UAAJ,CAAjB;AACA,0BAAME,CAAN,EAAS,CAACG,EAAD,EAAKC,EAAL,KAAY;AACjBA,QAAAA,EAAE,GAAGA,EAAE,CAACF,QAAH,EAAL;AACAH,QAAAA,MAAM,CAACE,CAAC,GAAGH,UAAJ,GAAiBM,EAAlB,CAAN,GAA8BD,EAA9B;AACH,OAHD;AAIH,KAND,MAMO;AACHJ,MAAAA,MAAM,CAACE,CAAD,CAAN,GAAYD,CAAZ;AACH;AACJ,GAZD;AAcA,SAAOD,MAAP;AACH,CAlBD;;eAoBeH,a","sourcesContent":["import _each from 'lodash/each';\n\n/**\n * Convert a hierachy object into a flat object with the key path sperarated by a given string, default as \".\".\n * @param {*} object\n * @param {*} keyPathSep\n * @returns {object}\n */\nconst flattenObject = (object, keyPathSep = '.') => {\n    const result = {};\n\n    _each(object, (v, k) => {\n        k = k.toString();\n\n        if (v != null && typeof v === 'object') {\n            v = flattenObject(v, keyPathSep);\n            _each(v, (v2, k2) => {\n                k2 = k2.toString();\n                result[k + keyPathSep + k2] = v2;\n            });\n        } else {\n            result[k] = v;\n        }\n    });\n\n    return result;\n};\n\nexport default flattenObject;\n"]}