{"version":3,"sources":["hookInvoke.js"],"names":["hookInvoke","obj","onCalling","onCalled","Proxy","get","target","propKey","origMethod","args","Promise","resolve","name","returned","apply","then","catch"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,UAAU,GAAG,CAACC,GAAD,EAAMC,SAAN,EAAiBC,QAAjB,KACf,IAAIC,KAAJ,CAAUH,GAAV,EAAe;AACXI,EAAAA,GAAG,CAACC,MAAD,EAASC;AAAQ;AAAjB,IAAiC;AAChC,UAAMC,UAAU,GAAGF,MAAM,CAACC,OAAD,CAAzB;;AACA,QAAI,OAAOC,UAAP,KAAsB,UAA1B,EAAsC;AAClC,aAAO,UAAU,GAAGC,IAAb,EAAmB;AACtBP,QAAAA,SAAS,IACLQ,OAAO,CAACC,OAAR,CACIT,SAAS,CAACD,GAAD,EAAM;AAAEW,UAAAA,IAAI,EAAEL,OAAR;AAAiBE,UAAAA;AAAjB,SAAN,CADb,CADJ;AAIA,YAAII,QAAQ,GAAGL,UAAU,CAACM,KAAX,CAAiBR,MAAjB,EAAyBG,IAAzB,CAAf;AACAN,QAAAA,QAAQ,IACJO,OAAO,CAACC,OAAR,CAAgBE,QAAhB,EACKE,IADL,CACWF,QAAD,IACFH,OAAO,CAACC,OAAR,CACIR,QAAQ,CAACF,GAAD,EAAM;AAAEW,UAAAA,IAAI,EAAEL,OAAR;AAAiBM,UAAAA;AAAjB,SAAN,CADZ,CAFR,EAMKG,KANL,EADJ;AAQA,eAAOH,QAAP;AACH,OAfD;AAgBH;;AAED,WAAOL,UAAP;AACH;;AAvBU,CAAf,CADJ;;eA2BeR,U","sourcesContent":["/**\n * Add hooks before an object's method is being called and after.\n * @alias lang.hookInvoke\n * @param {*} obj\n * @param {*} onCalling - Before hook\n * @param {*} onCalled - After hook\n * @returns {Object} The hooked object\n */\nconst hookInvoke = (obj, onCalling, onCalled) =>\n    new Proxy(obj, {\n        get(target, propKey /*, receiver*/) {\n            const origMethod = target[propKey];\n            if (typeof origMethod === 'function') {\n                return function (...args) {\n                    onCalling &&\n                        Promise.resolve(\n                            onCalling(obj, { name: propKey, args })\n                        );\n                    let returned = origMethod.apply(target, args);\n                    onCalled &&\n                        Promise.resolve(returned)\n                            .then((returned) =>\n                                Promise.resolve(\n                                    onCalled(obj, { name: propKey, returned })\n                                )\n                            )\n                            .catch();\n                    return returned;\n                };\n            }\n\n            return origMethod;\n        },\n    });\n\nexport default hookInvoke;\n"]}