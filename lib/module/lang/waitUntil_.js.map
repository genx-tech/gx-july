{"version":3,"names":["sleep_","waitUntil_","checker","checkInterval","arguments","length","undefined","maxRounds","result","counter"],"sources":["waitUntil_.js"],"sourcesContent":["import sleep_ from './sleep_';\n\n/**\n * Run the checker every given duration for certain rounds until the checker returns non-false value.\n * @alias lang.waitUntil_\n * @async\n * @param {Function} checker - predicator\n * @param {integer} [checkInterval=1000]\n * @param {integer} [maxRounds=10]\n * @returns {Promise.<boolean>}\n */\nasync function waitUntil_(checker, checkInterval = 1000, maxRounds = 10) {\n    let result = await checker();\n    if (result) return result;\n\n    let counter = 0;\n    do {\n        await sleep_(checkInterval);\n\n        result = await checker();\n\n        if (result) {\n            break;\n        }\n    } while (++counter < maxRounds);\n\n    return result;\n}\n\nexport default waitUntil_;\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,UAAU;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,UAAUA,CAACC,OAAO,EAAwC;EAAA,IAAtCC,aAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAAA,IAAEG,SAAS,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACnE,IAAII,MAAM,GAAG,MAAMN,OAAO,CAAC,CAAC;EAC5B,IAAIM,MAAM,EAAE,OAAOA,MAAM;EAEzB,IAAIC,OAAO,GAAG,CAAC;EACf,GAAG;IACC,MAAMT,MAAM,CAACG,aAAa,CAAC;IAE3BK,MAAM,GAAG,MAAMN,OAAO,CAAC,CAAC;IAExB,IAAIM,MAAM,EAAE;MACR;IACJ;EACJ,CAAC,QAAQ,EAAEC,OAAO,GAAGF,SAAS;EAE9B,OAAOC,MAAM;AACjB;AAEA,eAAeP,UAAU"}