{"version":3,"sources":["eachAsync_.js"],"names":["eachAsync_","obj","iterator","Array","isArray","r","l","length","i","push","k","Object","prototype","hasOwnProperty","call","Promise","reject"],"mappings":";;;;;;;AAAA;;;;AAUA,eAAeA,UAAf,CAA0BC,GAA1B,EAA+BC,QAA/B,EAAyC;AACrC,MAAIC,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAJ,EAAwB;AACpB,QAAII,CAAC,GAAG,EAAR;AAEA,QAAIC,CAAC,GAAGL,GAAG,CAACM,MAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuBE,CAAC,EAAxB,EAA4B;AACxBH,MAAAA,CAAC,CAACI,IAAF,CAAO,MAAMP,QAAQ,CAACD,GAAG,CAACO,CAAD,CAAJ,EAASA,CAAT,EAAYP,GAAZ,CAArB;AACH;;AAED,WAAOI,CAAP;AACH;;AAED,MAAI,4BAAcJ,GAAd,CAAJ,EAAwB;AACpB,QAAII,CAAC,GAAG,EAAR;;AAEA,SAAK,IAAIK,CAAT,IAAcT,GAAd,EAAmB;AACf,UAAIU,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCb,GAArC,EAA0CS,CAA1C,CAAJ,EAAkD;AAC9CL,QAAAA,CAAC,CAACK,CAAD,CAAD,GAAO,MAAMR,QAAQ,CAACD,GAAG,CAACS,CAAD,CAAJ,EAASA,CAAT,EAAYT,GAAZ,CAArB;AACH;AACJ;;AAED,WAAOI,CAAP;AACH;;AAED,SAAOU,OAAO,CAACC,MAAR,CAAe,mBAAf,CAAP;AACH;;eAEchB,U","sourcesContent":["import isPlainObject from '../object/isPlainObject';\n\n/**\n * Iterate an array of an object asynchronously\n * @alias collection.eachAsync_\n * @async\n * @param {Array|Object} obj\n * @param {asyncIterator} iterator\n * @returns {Promise.<Array|Object>}\n */\nasync function eachAsync_(obj, iterator) {\n    if (Array.isArray(obj)) {\n        let r = [];\n\n        let l = obj.length;\n        for (let i = 0; i < l; i++) {\n            r.push(await iterator(obj[i], i, obj));\n        }\n\n        return r;\n    } \n    \n    if (isPlainObject(obj)) {\n        let r = {};\n\n        for (let k in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, k)) {\n                r[k] = await iterator(obj[k], k, obj);\n            }\n        }\n\n        return r;\n    }  \n\n    return Promise.reject('Invalid argument!');\n}\n\nexport default eachAsync_;\n"]}