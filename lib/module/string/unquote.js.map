{"version":3,"sources":["unquote.js"],"names":["unquote","str","unescape","quoteSet","length","start","Array","isArray","Set","has","slice"],"mappings":";;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;AACtC,MAAI,OAAOF,GAAP,KAAe,QAAnB,EAA6B;AACzB,WAAOA,GAAP;AACH;;AAED,MAAIA,GAAG,CAACG,MAAJ,GAAa,CAAjB,EAAoB;AAChB,WAAOH,GAAP;AACH;;AAED,MAAII,KAAK,GAAGJ,GAAG,CAAC,CAAD,CAAf;;AACA,MAAII,KAAK,KAAKJ,GAAG,CAACA,GAAG,CAACG,MAAJ,GAAa,CAAd,CAAjB,EAAmC;AAC/B,WAAOH,GAAP;AACH;;AAED,MAAIE,QAAJ,EAAc;AACV,QAAIG,KAAK,CAACC,OAAN,CAAcJ,QAAd,CAAJ,EAA6B;AACzBA,MAAAA,QAAQ,GAAG,IAAIK,GAAJ,CAAQL,QAAR,CAAX;AACH;;AAED,QAAI,CAACA,QAAQ,CAACM,GAAT,CAAaJ,KAAb,CAAL,EAA0B;AACtB,aAAOJ,GAAP;AACH;AACJ;;AAEDA,EAAAA,GAAG,GAAGA,GAAG,CAACS,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAN;;AAEA,MAAIR,QAAJ,EAAc;AACV,WAAO,sBAAWD,GAAX,EAAgB,OAAOI,KAAvB,EAA8BA,KAA9B,CAAP;AACH;;AAED,SAAOJ,GAAP;AACH;;eAEcD,O","sourcesContent":["import { replaceAll } from './text';\n\n/**\n * Unquote a string\n * @alias string.unquote\n * @param {string} str\n * @param {boolean} [unescape=false] - True to unescape slashed quote, default false\n * @param {Set} [quoteSet] - Set of chars\n * @returns {string}\n */\nfunction unquote(str, unescape, quoteSet) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n\n    if (str.length < 2) {\n        return str;\n    }\n\n    let start = str[0];\n    if (start !== str[str.length - 1]) {\n        return str;\n    }\n\n    if (quoteSet) {\n        if (Array.isArray(quoteSet)) {\n            quoteSet = new Set(quoteSet);\n        }\n    \n        if (!quoteSet.has(start)) {\n            return str;\n        }\n    }    \n\n    str = str.slice(1, -1);\n\n    if (unescape) {\n        return replaceAll(str, '\\\\' + start, start);\n    }\n\n    return str;\n}\n\nexport default unquote;\n"]}