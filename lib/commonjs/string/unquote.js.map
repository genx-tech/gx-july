{"version":3,"sources":["unquote.js"],"names":["unquote","str","unescape","quoteSet","length","start","has","slice"],"mappings":";;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,QAAN,EAAgBC,QAAhB,EAA6B;AACzC,MAAI,OAAOF,GAAP,KAAe,QAAnB,EAA6B;AACzB,WAAOA,GAAP;AACH;;AAED,MAAIA,GAAG,CAACG,MAAJ,GAAa,CAAjB,EAAoB;AAChB,WAAOH,GAAP;AACH;;AAED,MAAII,KAAK,GAAGJ,GAAG,CAAC,CAAD,CAAf;;AACA,MAAII,KAAK,KAAKJ,GAAG,CAACA,GAAG,CAACG,MAAJ,GAAa,CAAd,CAAjB,EAAmC;AAC/B,WAAOH,GAAP;AACH;;AAED,MAAIE,QAAQ,IAAI,CAACA,QAAQ,CAACG,GAAT,CAAaD,KAAb,CAAjB,EAAsC;AAClC,WAAOJ,GAAP;AACH;;AAEDA,EAAAA,GAAG,GAAGA,GAAG,CAACM,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAN;;AAEA,MAAIL,QAAJ,EAAc;AACV,WAAO,wBAAWD,GAAX,EAAgB,OAAOI,KAAvB,EAA8BA,KAA9B,CAAP;AACH;;AAED,SAAOJ,GAAP;AACH,CAzBD;;eA2BeD,O","sourcesContent":["import { replaceAll } from './string';\n\n/**\n * Unquote a string\n * @param {String} str \n * @param {boolean} [unescape=false] - True to unescape slashed quote, default false\n * @param {Set} [quoteSet] - Set of chars\n */\nconst unquote = (str, unescape, quoteSet) => {\n    if (typeof str !== 'string') {\n        return str;\n    }\n\n    if (str.length < 2) {\n        return str;\n    }\n\n    let start = str[0];\n    if (start !== str[str.length - 1]) {\n        return str;\n    }\n\n    if (quoteSet && !quoteSet.has(start)) {\n        return str;\n    }\n\n    str = str.slice(1, -1);\n\n    if (unescape) {\n        return replaceAll(str, '\\\\' + start, start);\n    }\n\n    return str;\n};\n\nexport default unquote;\n"]}